name: 'Meteor Docker'

inputs:
  CR_USER:
    required: true
  CR_PAT:
    required: true
  node-version:
    required: true
    description: 'Node version'
    type: string
  type:
    required: false
    description: 'Type of image (official or alpine)'
    type: string

runs:
  using: composite

  steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        # registry: ghcr.io
        username: ${{ inputs.CR_USER }}
        password: ${{ inputs.CR_PAT }}

    - name: Restore build
      uses: actions/download-artifact@v3
      with:
        name: build
        path: /tmp/build

    - name: Unpack build
      shell: bash
      run: |
        cd /tmp/build
        tar xzf Rocket.Chat.tar.gz
        rm Rocket.Chat.tar.gz

    - name: setup qemu
      uses: docker/setup-qemu-action@v2

    - name: setup buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container

    - name: Build and push docker images
      shell: bash
      run: |
        args=(rocketchat)

        if [[ '${{ inputs.type }}' = 'alpine' ]]; then
          args+=($SERVICES_PUBLISH)
        fi;

        docker buildx bake -f docker-compose-ci.yml "${args[@]}" --push

